#!/usr/bin/env bash

###
#
# VARIABLES
#
###
# SHA or tag
REPO_VERSION="v1.0.0"

# Target file
REPO_TARGET="library/npm/spacial-theme.tar.gz"

# Source name, on GitLab
REPO_NAME="gumbo-millennium/spacial-theme.git"

##################
#
# DO NOT MAKE CHANGES BELOW THIS LINE
#
##################

# Enable error mode
set -e

# Check GitLab user and pass
if [ -z "$GITLAB_ACCESS_USER" -o -z "$GITLAB_ACCESS_PASS" ]
then
    echo "GitLab access credentials not set"
    echo "Aborting"
    exit 1
fi

# Get git root path
GIT_ROOT="$( git rev-parse --show-toplevel 2>/dev/null )"

# Construct source URL
REPO_URL="https://${GITLAB_ACCESS_USER}:${GITLAB_ACCESS_PASS}@gitlab.com/${REPO_NAME}"

# Get full path
REPO_TARGET_PATH="${GIT_ROOT}/${REPO_TARGET}"

# Get storage loc
TEMP_CRED="$( tempfile )"
TEMP_DIR="$( tempfile )-git"
TEMP_FILE="$TEMP_FILE.tar"

echo "Creating temp storage ${TEMP_DIR}"
mkdir $TEMP_DIR
cd "$TEMP_DIR"

echo "Building config"
git init

git config --local "credential.https://gitlab.com.username" "${GITLAB_ACCESS_USER}"
git config --local "credential.https://gitlab.com.helper" "store --file \"${TEMP_CRED}\""

echo "Storing credentials..."
cat > "${TEMP_CRED}" <<FILE
https://${GITLAB_ACCESS_USER}:${GITLAB_ACCESS_PASS}@gitlab.com
FILE

echo "Downloading..."
git remote add origin "$REPO_URL"
git fetch

ARCHIVE_ROOT_DIR="${REPO_NAME%.git}"
ARCHIVE_ROOT_DIR="${ARCHIVE_ROOT_DIR##*/}"

# Build a gzipped file
echo "Building archive at ${REPO_TARGET_PATH}..."
echo " > Files will be placed in ${ARCHIVE_ROOT_DIR}"
git archive \
    --format tar.gz \
    --prefix "${ARCHIVE_ROOT_DIR}/" \
    --output="${REPO_TARGET_PATH}" \
    "${REPO_VERSION}"

# Clean up after yourself
echo "Removing temp repo"
cd "$GIT_ROOT"
rm -rf "$TEMP_DIR"

# Report OK
echo "Done!"
exit 0
