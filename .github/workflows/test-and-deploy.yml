name: Test and deploy

on:
  pull_request:

  push:
    branches:
    - main
    - develop

jobs:
  build-frontend:
    name: "Build and test frontend"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup NodeJS and cache
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Copy environment config
        run: cp .github/assets/actions.env .env

      - name: Install Node dependencies
        run: npm clean-install

      - name: Build Front-end
        run: npm run build

      - name: Publish front-end
        uses: actions/upload-artifact@master
        with:
          name: front-end
          path: public/

  lint:
    name: Lint configuration files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Yaml linter
        run: pip3 install pyyaml jsonschema-lint

      - name: Check for Gumbo Millennium typos
        run: .github/assets/find-typos.sh

      - name: Lint Yaml files
        run: composer run yamllint

  build-backend:
    name: "Build and test backend on PHP ${{ matrix.php }}"
    runs-on: 'ubuntu-latest'

    continue-on-error: ${{ matrix.experimental == true }}

    needs:
      - lint

    env:
      GOOGLE_AUTH_FILE: ${{ github.workspace }}/.github/assets/google-auth.json
      GOOGLE_WALLET_AUTH_FILE: ${{ github.workspace }}/.github/assets/google-auth.json

    strategy:
      fail-fast: false
      matrix:
        php:
          - '8.1'
          - '8.2'
        include:
          - php: '8.1'
            main: true
          - php: '8.2'
            experimental: true
            composer-options: "--ignore-platform-reqs"

    services:
      database:
        image: mysql:8
        ports:
          - 13306:3306
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
          MYSQL_DATABASE: laravel
          MYSQL_USER: laravel
          MYSQL_PASSWORD: laravel

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php }}
          extensions: exif, json, mbstring, bcmath, dom, fileinfo, mysql, gd, imagick
          coverage: pcov
          tools: php-parallel-lint/php-parallel-lint

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Copy environment config
        run: cp .github/assets/actions.env .env

      - name: Lint PHP code
        run: parallel-lint  --exclude vendor --exclude node_modules .

      - name: Configure Laravel Nova auth
        run: composer config http-basic.nova.laravel.com "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_PASSWORD }}"

      - name: Install composer dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: "${{ matrix.composer-options }}"

      - name: Install an application key
        run: php artisan key:generate

      - name: Wait for MySQL to get ready
        timeout-minutes: 5
        run: |
          while ! mysqladmin --protocol=tcp --port=13306 ping 2>/dev/null; do
            echo "MySQL still offline, waiting 5 seconds";
            sleep 5s;
          done

      - name: Prepare database
        run: php artisan migrate --seed

      - name: Test optimizing the config
        run: |
          php artisan optimize -vv
          php artisan optimize:clear -vv

      - name: Run unit tests
        run: |
          vendor/bin/phpunit \
            --coverage-clover coverage-clover.xml

      - name: Report coverage to Pull Request
        uses: slavcodev/coverage-monitor-action@v1
        if: ${{ github.event_name == 'pull_request' && matrix.main == true }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          clover_file: coverage-clover.xml
          threshold_alert: 15
          threshold_warning: 60
          comment: false

      - name: Report test results to CodeClimate
        if: ${{ matrix.main == true }}
        run: |
          curl -o ./cc-test-reporter -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
          chmod +x ./cc-test-reporter
          ./cc-test-reporter format-coverage -t clover coverage-clover.xml
          ./cc-test-reporter upload-coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_ID }}
        continue-on-error: true

  deploy-acceptance:
    name: Deploy to acceptance

    if: ${{ github.event_name == 'push' }}

    needs:
      - build-frontend
      - build-backend

    uses: gumbo-millennium/website/.github/workflows/deploy-application.yml@develop
    with:
      environment: acceptance
    secrets:
      # Deployer
      deploy_port: ${{ secrets.DEPLOY_PORT }}
      deploy_user: ${{ secrets.DEPLOY_USER }}
      deploy_ssh_key: ${{ secrets.DEPLOY_SSH_KEY }}
      # Sentry
      sentry_auth_token: ${{ secrets.SENTRY_AUTH_TOKEN }}
      sentry_org: ${{ secrets.SENTRY_ORG }}
      sentry_project: ${{ secrets.SENTRY_PROJECT }}

  deploy-production:
    name: Deploy to production

    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

    needs:
      - deploy-acceptance

    uses: gumbo-millennium/website/.github/workflows/deploy-application.yml@develop
    with:
      environment: production
    secrets:
      # Deployer
      deploy_port: ${{ secrets.DEPLOY_PORT }}
      deploy_user: ${{ secrets.DEPLOY_USER }}
      deploy_ssh_key: ${{ secrets.DEPLOY_SSH_KEY }}
      # Sentry
      sentry_auth_token: ${{ secrets.SENTRY_AUTH_TOKEN }}
      sentry_org: ${{ secrets.SENTRY_ORG }}
      sentry_project: ${{ secrets.SENTRY_PROJECT }}
