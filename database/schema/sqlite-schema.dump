CREATE TABLE IF NOT EXISTS "migrations" ("id" integer not null primary key autoincrement, "migration" varchar not null, "batch" integer not null);
CREATE TABLE IF NOT EXISTS "telescope_entries" ("sequence" integer not null primary key autoincrement, "uuid" varchar not null, "batch_id" varchar not null, "family_hash" varchar, "should_display_on_index" tinyint(1) not null default '1', "type" varchar not null, "content" text not null, "created_at" datetime);
CREATE UNIQUE INDEX "telescope_entries_uuid_unique" on "telescope_entries" ("uuid");
CREATE INDEX "telescope_entries_batch_id_index" on "telescope_entries" ("batch_id");
CREATE INDEX "telescope_entries_family_hash_index" on "telescope_entries" ("family_hash");
CREATE INDEX "telescope_entries_created_at_index" on "telescope_entries" ("created_at");
CREATE INDEX "telescope_entries_type_should_display_on_index_index" on "telescope_entries" ("type", "should_display_on_index");
CREATE TABLE IF NOT EXISTS "telescope_entries_tags" ("entry_uuid" varchar not null, "tag" varchar not null, foreign key("entry_uuid") references "telescope_entries"("uuid") on delete cascade);
CREATE INDEX "telescope_entries_tags_entry_uuid_tag_index" on "telescope_entries_tags" ("entry_uuid", "tag");
CREATE INDEX "telescope_entries_tags_tag_index" on "telescope_entries_tags" ("tag");
CREATE TABLE IF NOT EXISTS "telescope_monitoring" ("tag" varchar not null);
CREATE TABLE IF NOT EXISTS "password_resets" ("email" varchar not null, "token" varchar not null, "created_at" datetime);
CREATE INDEX "password_resets_email_index" on "password_resets" ("email");
CREATE TABLE IF NOT EXISTS "permissions" ("id" integer not null primary key autoincrement, "name" varchar not null, "guard_name" varchar not null, "created_at" datetime, "updated_at" datetime, "title" varchar);
CREATE TABLE IF NOT EXISTS "roles" ("id" integer not null primary key autoincrement, "name" varchar not null, "guard_name" varchar not null, "created_at" datetime, "updated_at" datetime, "title" varchar, "default" tinyint(1) not null default '0', "conscribo_id" integer);
CREATE TABLE IF NOT EXISTS "model_has_permissions" ("permission_id" integer not null, "model_type" varchar not null, "model_id" integer not null, foreign key("permission_id") references "permissions"("id") on delete cascade, primary key ("permission_id", "model_id", "model_type"));
CREATE INDEX "model_has_permissions_model_id_model_type_index" on "model_has_permissions" ("model_id", "model_type");
CREATE TABLE IF NOT EXISTS "model_has_roles" ("role_id" integer not null, "model_type" varchar not null, "model_id" integer not null, foreign key("role_id") references "roles"("id") on delete cascade, primary key ("role_id", "model_id", "model_type"));
CREATE INDEX "model_has_roles_model_id_model_type_index" on "model_has_roles" ("model_id", "model_type");
CREATE TABLE IF NOT EXISTS "role_has_permissions" ("permission_id" integer not null, "role_id" integer not null, foreign key("permission_id") references "permissions"("id") on delete cascade, foreign key("role_id") references "roles"("id") on delete cascade, primary key ("permission_id", "role_id"));
CREATE TABLE IF NOT EXISTS "failed_jobs" ("id" integer not null primary key autoincrement, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime default CURRENT_TIMESTAMP not null);
CREATE TABLE IF NOT EXISTS "file_categories" ("id" integer not null primary key autoincrement, "created_at" datetime, "updated_at" datetime, "title" varchar, "slug" varchar not null);
CREATE UNIQUE INDEX "file_categories_slug_unique" on "file_categories" ("slug");
CREATE TABLE IF NOT EXISTS "join_submissions" ("id" integer not null primary key autoincrement, "created_at" datetime, "updated_at" datetime, "first_name" varchar, "insert" varchar, "last_name" varchar not null, "email" varchar not null, "phone" text, "date_of_birth" text, "gender" text, "street" text, "number" text, "city" text, "postal_code" text, "country" text, "windesheim_student" tinyint(1) not null default '0', "newsletter" tinyint(1) not null default '0', "granted" tinyint(1), "referrer" varchar);
CREATE INDEX "join_submissions_email_index" on "join_submissions" ("email");
CREATE TABLE IF NOT EXISTS "webhook_calls" ("id" integer not null primary key autoincrement, "name" varchar not null, "payload" text, "exception" text, "created_at" datetime, "updated_at" datetime);
CREATE TABLE enrollments (id VARCHAR(255) NOT NULL COLLATE BINARY, user_id INTEGER NOT NULL, activity_id INTEGER NOT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, data CLOB DEFAULT NULL COLLATE BINARY, deleted_reason VARCHAR(255) DEFAULT NULL COLLATE BINARY, price INTEGER DEFAULT NULL, payment_intent VARCHAR(255) DEFAULT NULL COLLATE BINARY, "state" varchar not null default 'App\\Models\\States\\Enrollment\\Created', "expire" datetime, "payment_invoice" varchar, "total_price" integer, "user_type" varchar not null default 'normal', "payment_source" varchar, "transfer_secret" varchar, "ticket_id" integer, "ticket_code" varchar, "consumed_at" datetime, "consumed_by_id" integer, PRIMARY KEY(id));
CREATE UNIQUE INDEX "enrollments_payment_intent_unique" on "enrollments" ("payment_intent");
CREATE TABLE action_events (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, batch_id VARCHAR(255) NOT NULL COLLATE BINARY, name VARCHAR(255) NOT NULL COLLATE BINARY, actionable_type VARCHAR(255) NOT NULL COLLATE BINARY, target_type VARCHAR(255) NOT NULL COLLATE BINARY, model_type VARCHAR(255) NOT NULL COLLATE BINARY, fields CLOB NOT NULL COLLATE BINARY, status VARCHAR(255) DEFAULT 'running' NOT NULL COLLATE BINARY, exception CLOB NOT NULL COLLATE BINARY, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, original CLOB DEFAULT NULL COLLATE BINARY, changes CLOB DEFAULT NULL COLLATE BINARY, user_id VARCHAR(36) NOT NULL, actionable_id VARCHAR(36) NOT NULL COLLATE BINARY, target_id VARCHAR(36) NOT NULL COLLATE BINARY, model_id VARCHAR(36) DEFAULT NULL COLLATE BINARY);
CREATE INDEX action_events_actionable_type_actionable_id_index ON action_events (actionable_type, actionable_id);
CREATE INDEX action_events_batch_id_model_type_model_id_index ON action_events (batch_id, model_type, model_id);
CREATE INDEX action_events_user_id_index ON action_events (user_id);
CREATE TABLE activities (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, cancelled_at DATETIME DEFAULT NULL, name VARCHAR(255) NOT NULL COLLATE BINARY, slug VARCHAR(255) NOT NULL COLLATE BINARY, tagline VARCHAR(255) DEFAULT NULL COLLATE BINARY, description CLOB DEFAULT NULL COLLATE BINARY, start_date DATETIME NOT NULL, end_date DATETIME NOT NULL, seats INTEGER DEFAULT NULL, enrollment_start DATETIME DEFAULT NULL, enrollment_end DATETIME DEFAULT NULL, enrollment_questions CLOB DEFAULT NULL COLLATE BINARY, role_id INTEGER DEFAULT NULL, is_public BOOLEAN DEFAULT '1' NOT NULL, payment_type VARCHAR(255) DEFAULT NULL COLLATE BINARY, location VARCHAR(255) DEFAULT NULL COLLATE BINARY, location_address VARCHAR(255) DEFAULT NULL COLLATE BINARY, member_discount INTEGER DEFAULT NULL, price INTEGER DEFAULT NULL, discount_count INTEGER DEFAULT NULL, stripe_coupon_id VARCHAR(255) DEFAULT NULL COLLATE BINARY, statement VARCHAR(22) DEFAULT NULL COLLATE BINARY, "cancelled_reason" text, "rescheduled_from" datetime, "rescheduled_reason" varchar, "postponed_at" datetime, "postponed_reason" varchar, "location_type" varchar not null default 'offline', "published_at" datetime, "features" text not null default '[]', "poster" varchar, "ticket_text" text, "created_by_id" integer, "updated_by_id" integer);
CREATE UNIQUE INDEX activities_slug_unique ON activities (slug);
CREATE TABLE users (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, first_name VARCHAR(255) NOT NULL COLLATE BINARY, "insert" VARCHAR(255) DEFAULT NULL COLLATE BINARY, last_name VARCHAR(255) NOT NULL COLLATE BINARY, email VARCHAR(255) NOT NULL COLLATE BINARY, email_verified_at DATETIME DEFAULT NULL, password VARCHAR(255) NOT NULL COLLATE BINARY, remember_token VARCHAR(255) DEFAULT NULL COLLATE BINARY, alias VARCHAR(255) DEFAULT NULL COLLATE BINARY, gender VARCHAR(255) DEFAULT NULL COLLATE BINARY, stripe_id VARCHAR(255) DEFAULT NULL, "conscribo_id" integer, "address" text, "phone" text, "telegram_id" varchar, "grants" text not null default '[]', "locked" tinyint(1) not null default '0');
CREATE UNIQUE INDEX users_email_unique ON users (email);
CREATE UNIQUE INDEX "roles_conscribo_id_unique" on "roles" ("conscribo_id");
CREATE UNIQUE INDEX "users_conscribo_id_unique" on "users" ("conscribo_id");
CREATE TABLE IF NOT EXISTS "bot_user_links" ("id" varchar not null, "driver" varchar not null, "driver_id" varchar not null, "name" varchar, primary key ("id"));
CREATE UNIQUE INDEX "bot_user_links_driver_driver_id_unique" on "bot_user_links" ("driver", "driver_id");
CREATE TABLE IF NOT EXISTS "bot_quotes" ("id" integer not null primary key autoincrement, "created_at" datetime, "updated_at" datetime, "submitted_at" datetime, "user_id" integer, "display_name" varchar not null, "quote" varchar not null, "message_id" integer);
CREATE TABLE IF NOT EXISTS "file_bundles" ("id" integer not null primary key autoincrement, "category_id" integer, "created_at" datetime, "updated_at" datetime, "published_at" datetime default CURRENT_TIMESTAMP not null, "owner_id" integer, "title" varchar not null, "slug" varchar not null, "description" text, "total_size" integer not null default '0', "sort_order" varchar not null default 'desc', foreign key("owner_id") references "users"("id") on delete set null);
CREATE UNIQUE INDEX "file_bundles_slug_unique" on "file_bundles" ("slug");
CREATE TABLE IF NOT EXISTS "media" ("id" integer not null primary key autoincrement, "model_type" varchar not null, "model_id" integer not null, "collection_name" varchar not null, "name" varchar not null, "file_name" varchar not null, "mime_type" varchar, "disk" varchar not null, "size" integer not null, "manipulations" text not null, "custom_properties" text not null, "responsive_images" text not null, "order_column" integer, "created_at" datetime, "updated_at" datetime, "uuid" varchar, "conversions_disk" varchar);
CREATE INDEX "media_model_type_model_id_index" on "media" ("model_type", "model_id");
CREATE TABLE IF NOT EXISTS "file_downloads" ("id" varchar not null, "created_at" datetime, "user_id" integer not null, "bundle_id" integer not null, "media_id" integer, "ip" varchar not null, "user_agent" varchar not null, foreign key("user_id") references "users"("id") on delete cascade, foreign key("bundle_id") references "file_bundles"("id") on delete cascade, foreign key("media_id") references "media"("id") on delete set null);
CREATE TABLE pages (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, title VARCHAR(255) NOT NULL COLLATE BINARY, slug VARCHAR(255) NOT NULL COLLATE BINARY, contents CLOB DEFAULT NULL COLLATE BINARY, author_id INTEGER DEFAULT NULL, type VARCHAR(255) DEFAULT 'user' NOT NULL COLLATE BINARY, "group" VARCHAR(255) DEFAULT NULL COLLATE BINARY, summary VARCHAR(120) DEFAULT NULL COLLATE BINARY, "hidden" tinyint(1) not null default '0', "cover" varchar);
CREATE UNIQUE INDEX pages_group_slug_unique ON pages ("group", slug);
CREATE INDEX pages_author_id_index ON pages (author_id);
CREATE TABLE IF NOT EXISTS "sponsor_clicks" ("id" integer not null primary key autoincrement, "sponsor_id" integer not null, "count" integer not null default '1', "date" date not null, foreign key("sponsor_id") references "sponsors"("id") on delete cascade);
CREATE UNIQUE INDEX "sponsor_clicks_sponsor_id_date_unique" on "sponsor_clicks" ("sponsor_id", "date");
CREATE TABLE sponsors (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, name VARCHAR(255) NOT NULL COLLATE BINARY, url VARCHAR(255) NOT NULL COLLATE BINARY, starts_at DATETIME DEFAULT NULL, ends_at DATETIME DEFAULT NULL, view_count INTEGER DEFAULT 0 NOT NULL, logo_gray VARCHAR(255) DEFAULT NULL COLLATE BINARY, logo_color VARCHAR(255) DEFAULT NULL COLLATE BINARY, caption CLOB DEFAULT NULL COLLATE BINARY, contents_title VARCHAR(255) DEFAULT NULL COLLATE BINARY, contents CLOB DEFAULT NULL COLLATE BINARY, deleted_at DATETIME DEFAULT NULL, slug VARCHAR(255) DEFAULT '' NOT NULL COLLATE BINARY, "cover" varchar);
CREATE UNIQUE INDEX sponsors_slug_unique ON sponsors (slug);
CREATE TABLE IF NOT EXISTS "scheduled_mails" ("id" integer not null primary key autoincrement, "group" varchar not null, "name" varchar not null, "scheduled_for" datetime not null, "sent_at" datetime, "is_sent" tinyint(1) not null default '0');
CREATE UNIQUE INDEX "name" on "scheduled_mails" ("group");
CREATE UNIQUE INDEX "enrollments_transfer_secret_unique" on "enrollments" ("transfer_secret");
CREATE TABLE IF NOT EXISTS "email_lists" ("id" integer not null primary key autoincrement, "created_at" datetime, "updated_at" datetime, "email" varchar not null, "service_id" varchar not null, "name" varchar, "aliases" text not null, "members" text not null);
CREATE UNIQUE INDEX "email_lists_email_unique" on "email_lists" ("email");
CREATE TABLE IF NOT EXISTS "shop_categories" ("id" varchar not null, "created_at" datetime, "updated_at" datetime, "name" varchar not null, "description" varchar, "slug" varchar not null, "visible" tinyint(1) not null default '0', "meta" text not null, "deleted_at" datetime, primary key ("id"));
CREATE UNIQUE INDEX "shop_categories_slug_unique" on "shop_categories" ("slug");
CREATE TABLE IF NOT EXISTS "shop_orders" ("id" integer not null primary key autoincrement, "user_id" integer not null, "created_at" datetime, "updated_at" datetime, "paid_at" datetime, "shipped_at" datetime, "price" integer not null, "number" varchar not null default '', "expires_at" datetime, "payment_id" varchar, "fee" integer not null default '0', "cancelled_at" datetime);
CREATE TABLE news_items (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, title VARCHAR(255) NOT NULL COLLATE BINARY, slug VARCHAR(255) NOT NULL COLLATE BINARY, contents CLOB DEFAULT NULL COLLATE BINARY, author_id INTEGER DEFAULT NULL, sponsor VARCHAR(255) DEFAULT NULL COLLATE BINARY, published_at DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, category VARCHAR(255) DEFAULT 'Nieuws' NOT NULL COLLATE BINARY, headline VARCHAR(255) DEFAULT NULL COLLATE BINARY, "cover" varchar);
CREATE INDEX news_items_author_id_index ON news_items (author_id);
CREATE UNIQUE INDEX news_items_slug_unique ON news_items (slug);
CREATE TABLE IF NOT EXISTS "member_referrals" ("id" integer not null primary key autoincrement, "created_at" datetime, "updated_at" datetime, "subject" varchar not null, "referred_by" varchar not null, "user_id" integer, foreign key("user_id") references "users"("id") on delete set null);
CREATE TABLE IF NOT EXISTS "jobs" ("id" integer not null primary key autoincrement, "queue" varchar not null, "payload" text not null, "attempts" integer not null, "reserved_at" integer, "available_at" integer not null, "created_at" integer not null);
CREATE INDEX "jobs_queue_index" on "jobs" ("queue");
CREATE TABLE IF NOT EXISTS "sessions" ("id" varchar not null, "user_id" integer, "ip_address" varchar, "user_agent" text, "payload" text not null, "last_activity" integer not null);
CREATE UNIQUE INDEX "sessions_id_unique" on "sessions" ("id");
CREATE TABLE IF NOT EXISTS "cache" ("key" varchar not null, "value" text not null, "expiration" integer not null);
CREATE UNIQUE INDEX "cache_key_unique" on "cache" ("key");
CREATE TABLE IF NOT EXISTS "file_exports" ("id" integer not null primary key autoincrement, "urlkey" varchar not null, "owner_id" integer, "path" varchar not null, "filename" varchar not null, "created_at" datetime, "updated_at" datetime, "expires_at" datetime, foreign key("owner_id") references "users"("id") on delete set null);
CREATE UNIQUE INDEX "file_exports_urlkey_unique" on "file_exports" ("urlkey");
CREATE INDEX "media_name_index" on "media" ("name");
CREATE TABLE shop_order_product_variant (product_variant_id VARCHAR(255) NOT NULL COLLATE BINARY, order_id INTEGER NOT NULL, price INTEGER NOT NULL, quantity INTEGER DEFAULT 21 NOT NULL, PRIMARY KEY(product_variant_id, order_id));
CREATE UNIQUE INDEX "shop_orders_number_unique" on "shop_orders" ("number");
CREATE TABLE IF NOT EXISTS "redirect_instructions" ("id" integer not null primary key autoincrement, "slug" varchar not null, "path" varchar not null, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime);
CREATE UNIQUE INDEX "redirect_instructions_slug_unique" on "redirect_instructions" ("slug");
CREATE TABLE IF NOT EXISTS "data_exports" ("id" integer not null primary key autoincrement, "token" varchar not null, "user_id" integer not null, "path" varchar, "created_at" datetime, "updated_at" datetime, "completed_at" datetime, "expires_at" datetime not null, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "webcam_cameras" ("id" integer not null primary key autoincrement, "name" varchar not null, "slug" varchar not null, "command" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "webcams_slug_unique" on "webcam_cameras" ("slug");
CREATE UNIQUE INDEX "webcams_command_unique" on "webcam_cameras" ("command");
CREATE TABLE shop_products (id VARCHAR(255) NOT NULL COLLATE BINARY, category_id VARCHAR(255) DEFAULT NULL COLLATE BINARY, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, name VARCHAR(255) NOT NULL COLLATE BINARY, slug VARCHAR(255) NOT NULL COLLATE BINARY, etag VARCHAR(255) DEFAULT NULL COLLATE BINARY, vat_rate INTEGER DEFAULT 21 NOT NULL, visible BOOLEAN DEFAULT '0' NOT NULL, meta CLOB NOT NULL COLLATE BINARY, advertise_on_home BOOLEAN DEFAULT '0' NOT NULL, description CLOB DEFAULT NULL COLLATE BINARY, features CLOB DEFAULT '[]' NOT NULL COLLATE BINARY, order_limit INTEGER DEFAULT NULL, image_path VARCHAR(255) DEFAULT NULL, "deleted_at" datetime, PRIMARY KEY(id));
CREATE UNIQUE INDEX shop_products_slug_unique ON shop_products (slug);
CREATE TABLE shop_product_variants (id VARCHAR(255) NOT NULL COLLATE BINARY, product_id VARCHAR(255) NOT NULL COLLATE BINARY, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, name VARCHAR(255) NOT NULL COLLATE BINARY, slug VARCHAR(255) NOT NULL COLLATE BINARY, sku VARCHAR(255) DEFAULT NULL COLLATE BINARY, options CLOB NOT NULL COLLATE BINARY, meta CLOB NOT NULL COLLATE BINARY, price SMALLINT UNSIGNED DEFAULT NULL, "order" INTEGER DEFAULT 0 NOT NULL, description CLOB DEFAULT NULL COLLATE BINARY, order_limit INTEGER DEFAULT NULL, image_path VARCHAR(255) DEFAULT NULL, "deleted_at" datetime, PRIMARY KEY(id));
CREATE TABLE IF NOT EXISTS "payments" ("id" integer not null primary key autoincrement, "payable_type" varchar not null, "payable_id" varchar not null, "user_id" integer, "provider" varchar not null, "transaction_id" varchar, "price" integer not null, "created_at" datetime, "updated_at" datetime, "paid_at" datetime, "expired_at" datetime, "cancelled_at" datetime);
CREATE INDEX "payments_payable_type_payable_id_index" on "payments" ("payable_type", "payable_id");
CREATE UNIQUE INDEX "payments_provider_transaction_id_unique" on "payments" ("provider", "transaction_id");
CREATE TABLE tickets (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, activity_id INTEGER DEFAULT NULL, title VARCHAR(255) NOT NULL COLLATE BINARY, description CLOB DEFAULT NULL COLLATE BINARY, price INTEGER DEFAULT NULL, quantity INTEGER DEFAULT NULL, available_from DATETIME DEFAULT NULL, available_until DATETIME DEFAULT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, is_public BOOLEAN DEFAULT '1' NOT NULL);
CREATE UNIQUE INDEX "media_uuid_unique" on "media" ("uuid");
CREATE TABLE IF NOT EXISTS "personal_access_tokens" ("id" integer not null primary key autoincrement, "tokenable_type" varchar not null, "tokenable_id" integer not null, "name" varchar not null, "token" varchar not null, "abilities" text, "last_used_at" datetime, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "personal_access_tokens_tokenable_type_tokenable_id_index" on "personal_access_tokens" ("tokenable_type", "tokenable_id");
CREATE UNIQUE INDEX "personal_access_tokens_token_unique" on "personal_access_tokens" ("token");
CREATE UNIQUE INDEX "enrollments_activity_id_ticket_code_unique" on "enrollments" ("activity_id", "ticket_code");
CREATE TABLE IF NOT EXISTS "albums" ("id" integer not null primary key autoincrement, "activity_id" integer, "user_id" integer, "name" varchar not null, "slug" varchar not null, "description" varchar, "visibility" varchar not null default 'private', "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, "editable_from" datetime, "editable_until" datetime, foreign key("activity_id") references "activities"("id") on delete restrict, foreign key("user_id") references "users"("id") on delete set null);
CREATE UNIQUE INDEX "albums_slug_unique" on "albums" ("slug");
CREATE TABLE IF NOT EXISTS "photos" ("id" integer not null primary key autoincrement, "album_id" integer not null, "user_id" integer, "visibility" integer not null default '1', "name" varchar not null, "path" varchar not null, "description" varchar, "removal_reason" varchar, "taken_at" datetime, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, "width" integer, "height" integer, "size" integer, "exif" text, foreign key("album_id") references "albums"("id") on delete restrict, foreign key("user_id") references "users"("id") on delete set null);
CREATE TABLE IF NOT EXISTS "photo_reactions" ("id" integer not null primary key autoincrement, "photo_id" integer not null, "user_id" integer, "reaction" varchar not null, foreign key("photo_id") references "photos"("id") on delete cascade, foreign key("user_id") references "users"("id") on delete cascade);
CREATE UNIQUE INDEX "photo_reactions_photo_id_user_id_unique" on "photo_reactions" ("photo_id", "user_id");
CREATE TABLE IF NOT EXISTS "photo_reports" ("id" integer not null primary key autoincrement, "photo_id" integer not null, "user_id" integer, "reason" varchar not null, "resolution" varchar not null default 'pending', "created_at" datetime, "updated_at" datetime, "resolved_at" datetime, foreign key("photo_id") references "photos"("id") on delete cascade, foreign key("user_id") references "users"("id") on delete cascade);
CREATE UNIQUE INDEX "photo_reports_photo_id_user_id_unique" on "photo_reports" ("photo_id", "user_id");
CREATE TABLE IF NOT EXISTS "backups" ("id" integer not null primary key autoincrement, "previous_backup_id" integer, "type" varchar not null, "disk" varchar not null, "path" varchar not null, "failed_reason" varchar, "created_at" datetime, "updated_at" datetime, "completed_at" datetime, "failed_at" datetime, foreign key("previous_backup_id") references "backups"("id") on delete set null);
CREATE TABLE IF NOT EXISTS "nova_notifications" ("id" varchar not null, "type" varchar not null, "notifiable_type" varchar not null, "notifiable_id" integer not null, "data" text not null, "read_at" datetime, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, primary key ("id"));
CREATE INDEX "nova_notifications_notifiable_type_notifiable_id_index" on "nova_notifications" ("notifiable_type", "notifiable_id");
CREATE TABLE IF NOT EXISTS "webcam_devices" ("id" integer not null primary key autoincrement, "device" varchar not null, "name" varchar not null, "path" varchar, "owner_id" integer not null, "camera_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("owner_id") references "users"("id") on delete cascade, foreign key("camera_id") references "webcam_cameras"("id") on delete set null);
CREATE UNIQUE INDEX "webcam_devices_device_name_unique" on "webcam_devices" ("device", "name");
CREATE TABLE IF NOT EXISTS "google_wallet_event_classes" ("id" integer not null primary key autoincrement, "wallet_id" varchar not null, "subject_type" varchar not null, "subject_id" integer not null, "review_status" varchar not null default '', "review" text, "name" varchar not null, "location_name" varchar, "location_address" varchar, "start_time" datetime not null, "end_time" datetime not null, "uri" varchar, "hero_image" varchar, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "google_wallet_event_classes_subject_type_subject_id_index" on "google_wallet_event_classes" ("subject_type", "subject_id");
CREATE UNIQUE INDEX "google_wallet_event_classes_wallet_id_unique" on "google_wallet_event_classes" ("wallet_id");
CREATE TABLE IF NOT EXISTS "google_wallet_event_objects" ("id" integer not null primary key autoincrement, "class_id" integer not null, "wallet_id" varchar not null, "subject_type" varchar not null, "subject_id" integer not null, "owner_id" integer, "state" varchar not null default '', "value" integer, "ticket_number" varchar not null, "ticket_type" varchar not null, "barcode" varchar not null, "installs" integer not null default '0', "removals" integer not null default '0', "created_at" datetime, "updated_at" datetime, "barcode_type" varchar not null default 'qrcode', foreign key("class_id") references "google_wallet_event_classes"("id") on delete restrict, foreign key("owner_id") references "users"("id") on delete set null);
CREATE INDEX "google_wallet_event_objects_subject_type_subject_id_index" on "google_wallet_event_objects" ("subject_type", "subject_id");
CREATE UNIQUE INDEX "google_wallet_event_objects_wallet_id_unique" on "google_wallet_event_objects" ("wallet_id");
CREATE TABLE IF NOT EXISTS "nova_pending_field_attachments" ("id" integer not null primary key autoincrement, "draft_id" varchar not null, "attachment" varchar not null, "disk" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "nova_pending_field_attachments_draft_id_index" on "nova_pending_field_attachments" ("draft_id");
CREATE TABLE IF NOT EXISTS "nova_field_attachments" ("id" integer not null primary key autoincrement, "attachable_type" varchar not null, "attachable_id" integer not null, "attachment" varchar not null, "disk" varchar not null, "url" varchar not null, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "nova_field_attachments_attachable_type_attachable_id_index" on "nova_field_attachments" ("attachable_type", "attachable_id");
CREATE INDEX "nova_field_attachments_url_index" on "nova_field_attachments" ("url");
CREATE TABLE IF NOT EXISTS "activity_message_ticket" ("activity_message_id" integer not null, "ticket_id" integer not null, foreign key("activity_message_id") references "activity_messages"("id") on delete cascade, foreign key("ticket_id") references "tickets"("id") on delete cascade, primary key ("activity_message_id", "ticket_id"));
CREATE TABLE activity_messages (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, activity_id INTEGER NOT NULL, sender_id INTEGER DEFAULT NULL, subject VARCHAR(255) NOT NULL COLLATE BINARY, body CLOB NOT NULL COLLATE BINARY, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, sent_at DATETIME DEFAULT NULL, scheduled_at DATETIME DEFAULT NULL, include_pending BOOLEAN DEFAULT '0' NOT NULL, recipients INTEGER DEFAULT NULL, "deleted_at" datetime);
CREATE TABLE IF NOT EXISTS "google_wallet_messages" ("id" integer not null primary key autoincrement, "created_at" datetime, "updated_at" datetime, "header" varchar not null, "body" text not null, "start_time" datetime not null, "end_time" datetime, "activity_message_id" integer not null, foreign key("activity_message_id") references "activity_messages"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "google_wallet_message_morphs" ("id" integer not null primary key autoincrement, "message_id" integer not null, "object_type" varchar not null, "object_id" integer not null, foreign key("message_id") references "google_wallet_messages"("id") on delete cascade);
CREATE INDEX "google_wallet_message_morphs_object_type_object_id_index" on "google_wallet_message_morphs" ("object_type", "object_id");
CREATE UNIQUE INDEX "google_wallet_message_morphs_unique" on "google_wallet_message_morphs" ("message_id", "object_id", "object_type");
CREATE TABLE activity_enrollments (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, previous_id VARCHAR(255) DEFAULT NULL COLLATE BINARY, activity_id INTEGER NOT NULL, ticket_id INTEGER DEFAULT NULL, user_id INTEGER NOT NULL, state VARCHAR(255) DEFAULT 'created' NOT NULL COLLATE BINARY, price INTEGER DEFAULT NULL, total_price INTEGER DEFAULT NULL, user_type VARCHAR(255) DEFAULT 'normal' NOT NULL COLLATE BINARY, expire DATETIME DEFAULT NULL, transfer_secret VARCHAR(255) DEFAULT NULL COLLATE BINARY, consumed_at DATETIME DEFAULT NULL, consumed_by_id INTEGER DEFAULT NULL, data CLOB DEFAULT NULL COLLATE BINARY, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, deleted_at DATETIME DEFAULT NULL, deleted_reason VARCHAR(255) DEFAULT NULL COLLATE BINARY, barcode VARCHAR(32) DEFAULT NULL COLLATE BINARY, "barcode_type" varchar not null default 'qrcode', "barcode_generated" tinyint(1) not null default '0');
CREATE UNIQUE INDEX activity_enrollments_previous_id_unique ON activity_enrollments (previous_id);
CREATE TABLE IF NOT EXISTS "job_batches" ("id" varchar not null, "name" varchar not null, "total_jobs" integer not null, "pending_jobs" integer not null, "failed_jobs" integer not null, "failed_job_ids" text not null, "options" text, "cancelled_at" integer, "created_at" integer not null, "finished_at" integer, primary key ("id"));
CREATE TABLE IF NOT EXISTS "payment_settlement_payment" ("id" integer not null primary key autoincrement, "settlement_id" integer not null, "payment_id" integer not null, "amount" integer not null, foreign key("settlement_id") references "payment_settlements"("id") on delete cascade, foreign key("payment_id") references "payment_settlements"("id") on delete restrict);
CREATE UNIQUE INDEX "payment_settlement_payment_settlement_id_payment_id_unique" on "payment_settlement_payment" ("settlement_id", "payment_id");
CREATE TABLE payment_settlements (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, mollie_id VARCHAR(255) NOT NULL COLLATE BINARY, reference VARCHAR(255) DEFAULT NULL COLLATE BINARY, status VARCHAR(255) DEFAULT 'open' NOT NULL COLLATE BINARY, export_path VARCHAR(255) DEFAULT NULL COLLATE BINARY, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, settled_at DATETIME DEFAULT NULL, amount INTEGER NOT NULL, "fees" integer not null, "missing_payments" text not null, "missing_refunds" text not null);
CREATE UNIQUE INDEX payment_settlements_reference_unique ON payment_settlements (reference);
CREATE UNIQUE INDEX payment_settlements_mollie_id_unique ON payment_settlements (mollie_id);
CREATE TABLE IF NOT EXISTS "payment_settlement_refunded_payment" ("id" integer not null primary key autoincrement, "settlement_id" integer not null, "payment_id" integer not null, "amount" integer not null, foreign key("settlement_id") references "payment_settlements"("id") on delete cascade, foreign key("payment_id") references "payment_settlements"("id") on delete restrict);
CREATE UNIQUE INDEX "payment_settlement_refunded_payment_unique" on "payment_settlement_refunded_payment" ("settlement_id", "payment_id");
INSERT INTO migrations VALUES(1,'2018_01_01_000000_create_action_events_table',1);
INSERT INTO migrations VALUES(2,'2018_08_08_100000_create_telescope_entries_table',1);
INSERT INTO migrations VALUES(3,'2019_05_10_000000_add_fields_to_action_events_table',1);
INSERT INTO migrations VALUES(4,'2019_09_11_131500_create_users_table',1);
INSERT INTO migrations VALUES(5,'2019_09_11_131505_create_password_resets_table',1);
INSERT INTO migrations VALUES(6,'2019_09_11_132000_create_permission_tables',1);
INSERT INTO migrations VALUES(7,'2019_09_11_132030_create_permission_titles',1);
INSERT INTO migrations VALUES(8,'2019_09_11_132500_create_failed_jobs_table',1);
INSERT INTO migrations VALUES(9,'2019_09_11_133000_create_activities_table',1);
INSERT INTO migrations VALUES(10,'2019_09_11_133005_create_enrollments_table',1);
INSERT INTO migrations VALUES(11,'2019_09_11_133015_create_payments_table',1);
INSERT INTO migrations VALUES(12,'2019_09_11_133500_create_file_categories_table',1);
INSERT INTO migrations VALUES(13,'2019_09_11_133505_create_files_table',1);
INSERT INTO migrations VALUES(14,'2019_09_11_133510_create_file_downloads_table',1);
INSERT INTO migrations VALUES(15,'2019_09_11_134500_create_join_submissions_table',1);
INSERT INTO migrations VALUES(16,'2019_09_11_135500_create_sponsors_table',1);
INSERT INTO migrations VALUES(17,'2019_09_11_143000_create_pages_table',1);
INSERT INTO migrations VALUES(18,'2019_09_11_143200_create_news_items_table',1);
INSERT INTO migrations VALUES(19,'2019_09_14_044251_change_nova_action_events_ids_to_strings',1);
INSERT INTO migrations VALUES(20,'2019_09_16_173552_add_activity_statement_description',1);
INSERT INTO migrations VALUES(21,'2019_09_29_163024_add_enrollments_deleted_reason',1);
INSERT INTO migrations VALUES(22,'2019_10_04_175436_add_paid_flag_to_enrollments',1);
INSERT INTO migrations VALUES(23,'2019_10_05_223532_remove_user_level_activities',1);
INSERT INTO migrations VALUES(24,'2019_11_06_214156_create_webhook_calls_table',1);
INSERT INTO migrations VALUES(25,'2019_11_07_233625_add_enrollment_payment_data',1);
INSERT INTO migrations VALUES(26,'2019_11_08_103443_add_enrollment_state',1);
INSERT INTO migrations VALUES(27,'2019_11_10_142315_add_stripe_ids_to_users',1);
INSERT INTO migrations VALUES(28,'2019_11_10_153530_simplify_guest_system_on_activities',1);
INSERT INTO migrations VALUES(29,'2019_11_10_190350_add_enrollment_expire_date',1);
INSERT INTO migrations VALUES(30,'2019_11_11_152738_ensure_unique_payment_intent_on_enrollments',1);
INSERT INTO migrations VALUES(31,'2019_11_21_000000_change_action_event_ids_to_strings',1);
INSERT INTO migrations VALUES(32,'2019_12_14_192806_add_payment_type_to_activities',1);
INSERT INTO migrations VALUES(33,'2019_12_15_153429_add_payment_invoices_to_enrollments',1);
INSERT INTO migrations VALUES(34,'2019_12_15_153833_add_full_price_to_enrollments',1);
INSERT INTO migrations VALUES(35,'2020_01_01_211414_add_enrollment_type_to_enrollments',1);
INSERT INTO migrations VALUES(36,'2020_01_01_221624_add_generated_name_to_users',1);
INSERT INTO migrations VALUES(37,'2020_01_02_081152_add_location_and_address_to_activities',1);
INSERT INTO migrations VALUES(38,'2020_01_09_150527_add_payment_source_to_enrollments',1);
INSERT INTO migrations VALUES(39,'2020_01_24_173137_add_type_to_pages',1);
INSERT INTO migrations VALUES(40,'2020_01_25_213645_add_sponsorship_to_news_items',1);
INSERT INTO migrations VALUES(41,'2020_01_25_214604_add_publish_date_to_news_items',1);
INSERT INTO migrations VALUES(42,'2020_01_31_041433_change_activity_member_price_to_discount',1);
INSERT INTO migrations VALUES(43,'2020_01_31_054618_add_coupon_id_to_activities',1);
INSERT INTO migrations VALUES(44,'2020_01_31_232200_fix_statement_fields',1);
INSERT INTO migrations VALUES(45,'2020_02_04_203540_add_read_time_to_news_items',1);
INSERT INTO migrations VALUES(46,'2020_02_07_143214_rename_stripe_id_on_users',1);
INSERT INTO migrations VALUES(47,'2020_02_07_144101_add_conscribo_id_to_roles',1);
INSERT INTO migrations VALUES(48,'2020_02_07_144328_add_conscribo_id_to_users',1);
INSERT INTO migrations VALUES(49,'2020_02_07_150359_add_address_and_phone_to_users',1);
INSERT INTO migrations VALUES(50,'2020_02_21_111016_create_bot_user_links_table',1);
INSERT INTO migrations VALUES(51,'2020_02_21_132242_create_bot_quotes_table',1);
INSERT INTO migrations VALUES(52,'2020_02_28_222658_add_images_and_category_to_news_items',1);
INSERT INTO migrations VALUES(53,'2020_02_29_011238_create_file_bundles_table',1);
INSERT INTO migrations VALUES(54,'2020_02_29_011638_drop_file_downloads_table',1);
INSERT INTO migrations VALUES(55,'2020_02_29_011721_drop_files_table',1);
INSERT INTO migrations VALUES(56,'2020_02_29_014148_create_media_table',1);
INSERT INTO migrations VALUES(57,'2020_02_29_024512_create_file_downloads_table_v2',1);
INSERT INTO migrations VALUES(58,'2020_03_06_155728_add_group_to_pages',1);
INSERT INTO migrations VALUES(59,'2020_03_06_181033_add_summary_to_pages',1);
INSERT INTO migrations VALUES(60,'2020_03_06_191926_add_image_to_pages',1);
INSERT INTO migrations VALUES(61,'2020_03_06_192859_make_summary_nullable_on_pages',1);
INSERT INTO migrations VALUES(62,'2020_03_06_222941_update_images_on_sponsors',1);
INSERT INTO migrations VALUES(63,'2020_03_09_160653_add_headline_to_news_items',1);
INSERT INTO migrations VALUES(64,'2020_03_12_170745_add_cancellation_to_activities',1);
INSERT INTO migrations VALUES(65,'2020_03_13_133826_add_reschedule_date_to_activities',1);
INSERT INTO migrations VALUES(66,'2020_03_25_175814_add_postponed_field_to_activities',1);
INSERT INTO migrations VALUES(67,'2020_03_25_195255_add_location_type_to_activities',1);
INSERT INTO migrations VALUES(68,'2020_04_10_205351_add_fields_to_sponsors',1);
INSERT INTO migrations VALUES(69,'2020_04_25_171806_create_sponsor_clicks_table',1);
INSERT INTO migrations VALUES(70,'2020_04_25_172940_remove_click_count_from_sponsors',1);
INSERT INTO migrations VALUES(71,'2020_06_29_180519_create_scheduled_mails_table',1);
INSERT INTO migrations VALUES(72,'2020_06_30_172645_add_transfer_secret_to_enrollments',1);
INSERT INTO migrations VALUES(73,'2020_07_16_111812_create_email_lists_table',1);
INSERT INTO migrations VALUES(74,'2020_08_04_110026_add_referrer_to_join_submissions',1);
INSERT INTO migrations VALUES(75,'2020_08_04_112634_add_published_flag_to_activities',1);
INSERT INTO migrations VALUES(76,'2020_11_17_000356_add_telegram_id_to_users',1);
INSERT INTO migrations VALUES(77,'2020_11_18_172434_drop_user_id_and_type_from_bot_user_links',1);
INSERT INTO migrations VALUES(78,'2020_12_30_193111_create_shop_categories_table',1);
INSERT INTO migrations VALUES(79,'2020_12_30_193203_create_shop_products_table',1);
INSERT INTO migrations VALUES(80,'2020_12_30_193210_create_shop_product_variants_table',1);
INSERT INTO migrations VALUES(81,'2020_12_30_193219_create_shop_orders_table',1);
INSERT INTO migrations VALUES(82,'2020_12_30_200116_remove_read_time_from_news_items',1);
INSERT INTO migrations VALUES(83,'2020_12_30_215837_create_shop_order_product_variant_table',1);
INSERT INTO migrations VALUES(84,'2021_01_02_212353_allow_empty_prices_on_shop_models',1);
INSERT INTO migrations VALUES(85,'2021_02_22_202758_create_member_referrals_table',1);
INSERT INTO migrations VALUES(86,'2021_02_23_182636_add_grants_column_to_users_table',1);
INSERT INTO migrations VALUES(87,'2021_04_03_011423_create_jobs_table',1);
INSERT INTO migrations VALUES(88,'2021_04_03_011459_create_sessions_table',1);
INSERT INTO migrations VALUES(89,'2021_04_03_011510_create_cache_table',1);
INSERT INTO migrations VALUES(90,'2021_04_03_151654_create_activity_messages_table',1);
INSERT INTO migrations VALUES(91,'2021_04_09_203102_create_file_exports_table',1);
INSERT INTO migrations VALUES(92,'2021_04_30_212026_add_sort_order_to_file_bundles_table',1);
INSERT INTO migrations VALUES(93,'2021_04_30_222946_add_order_field_to_shop_product_variants_table',1);
INSERT INTO migrations VALUES(94,'2021_05_05_232926_alter_media_table_add_index',1);
INSERT INTO migrations VALUES(95,'2021_05_15_154217_rename_vat_rate_to_amount_on_order_products_table',1);
INSERT INTO migrations VALUES(96,'2021_06_18_192755_add_mollie_fields_to_shop_orders',1);
INSERT INTO migrations VALUES(97,'2021_06_22_211136_add_cancelled_at_to_shop_orders',1);
INSERT INTO migrations VALUES(98,'2021_06_23_215152_add_advertise_field_to_shop_products',1);
INSERT INTO migrations VALUES(99,'2021_06_25_224111_rename_advertise_to_advertise_on_home_on_shop_products_table',1);
INSERT INTO migrations VALUES(100,'2021_06_29_191702_add_features_to_activities_table',1);
INSERT INTO migrations VALUES(101,'2021_08_20_195321_create_redirect_instructions_table',1);
INSERT INTO migrations VALUES(102,'2021_08_22_010406_create_data_exports_table',1);
INSERT INTO migrations VALUES(103,'2021_08_26_180116_add_hidden_flag_to_pages_table',1);
INSERT INTO migrations VALUES(104,'2021_09_08_125701_update_description_on_shop_products_table',1);
INSERT INTO migrations VALUES(105,'2021_09_08_125758_update_description_on_shop_product_variants_table',1);
INSERT INTO migrations VALUES(106,'2021_09_08_140444_create_webcams_table',1);
INSERT INTO migrations VALUES(107,'2021_09_08_140454_create_webcam_updates_table',1);
INSERT INTO migrations VALUES(108,'2021_09_08_231134_add_feature_flags_to_shop_products_table',1);
INSERT INTO migrations VALUES(109,'2021_09_09_000125_add_order_limit_to_shop_products_table',1);
INSERT INTO migrations VALUES(110,'2021_09_09_000130_add_order_limit_to_shop_product_variants_table',1);
INSERT INTO migrations VALUES(111,'2021_09_13_210551_rename_image_url_to_image_path_on_shop_products_table',1);
INSERT INTO migrations VALUES(112,'2021_09_13_210558_rename_image_url_to_image_path_on_shop_product_variants_table',1);
INSERT INTO migrations VALUES(113,'2021_09_25_173422_add_soft_deletes_to_shop_products',1);
INSERT INTO migrations VALUES(114,'2021_09_25_173427_add_soft_deletes_to_shop_product_variants',1);
INSERT INTO migrations VALUES(115,'2021_09_25_173434_add_soft_deletes_to_shop_categories',1);
INSERT INTO migrations VALUES(116,'2021_09_25_174102_download_missing_shop_images',1);
INSERT INTO migrations VALUES(117,'2021_11_21_203136_create_tickets_table',1);
INSERT INTO migrations VALUES(118,'2021_11_21_220015_add_ticket_id_to_enrollments',1);
INSERT INTO migrations VALUES(119,'2021_11_21_220828_add_tickets_to_enrollments',1);
INSERT INTO migrations VALUES(120,'2021_11_25_170000_drop_payments_table_before_recreation',1);
INSERT INTO migrations VALUES(121,'2021_11_25_170500_recreate_payments_table',1);
INSERT INTO migrations VALUES(122,'2021_11_27_201119_simplify_activity_table',1);
INSERT INTO migrations VALUES(123,'2021_11_27_222628_add_poster_to_activities',1);
INSERT INTO migrations VALUES(124,'2021_11_27_225630_add_cover_to_news_items',1);
INSERT INTO migrations VALUES(125,'2021_11_27_225638_add_cover_to_pages',1);
INSERT INTO migrations VALUES(126,'2021_11_27_225650_add_cover_to_sponsors',1);
INSERT INTO migrations VALUES(127,'2021_11_28_164709_migrate_orders_to_payments_table',1);
INSERT INTO migrations VALUES(128,'2021_11_29_221938_replace_members_only_with_is_public_on_tickets',1);
INSERT INTO migrations VALUES(129,'2021_12_05_173859_remove_paperclip_columns',1);
INSERT INTO migrations VALUES(130,'2021_12_08_183556_medialibrary_upgrade_v8',1);
INSERT INTO migrations VALUES(131,'2019_12_14_000001_create_personal_access_tokens_table',2);
INSERT INTO migrations VALUES(132,'2021_12_22_171037_convert_slugs_to_lowercase',2);
INSERT INTO migrations VALUES(133,'2022_03_12_185830_add_ticket_text_to_activities_table',2);
INSERT INTO migrations VALUES(134,'2022_03_18_221726_add_ticket_code_to_enrollments',2);
INSERT INTO migrations VALUES(135,'2022_03_18_221817_assign_unique_ticket_codes_to_enrollments',2);
INSERT INTO migrations VALUES(136,'2022_04_25_142418_create_albums_table',2);
INSERT INTO migrations VALUES(137,'2022_04_25_142448_create_photos_table',2);
INSERT INTO migrations VALUES(138,'2022_04_25_142504_create_photo_reactions_table',2);
INSERT INTO migrations VALUES(139,'2022_04_25_142517_create_photo_reports_table',2);
INSERT INTO migrations VALUES(140,'2022_05_16_191821_create_backups_table',2);
INSERT INTO migrations VALUES(141,'2021_08_25_193039_create_nova_notifications_table',3);
INSERT INTO migrations VALUES(142,'2022_04_26_000000_add_fields_to_nova_notifications_table',3);
INSERT INTO migrations VALUES(143,'2022_07_15_170100_drop_webcam_updates_table',3);
INSERT INTO migrations VALUES(144,'2022_07_15_170200_rename_webcams_to_webcam_cameras',3);
INSERT INTO migrations VALUES(145,'2022_07_15_170300_create_webcam_devices_table',3);
INSERT INTO migrations VALUES(146,'2022_08_18_184715_add_consumed_rows_to_enrollments',3);
INSERT INTO migrations VALUES(147,'2022_10_06_010448_create_settlements_table',3);
INSERT INTO migrations VALUES(148,'2022_10_06_010556_create_payment_settlement_subject_table',3);
INSERT INTO migrations VALUES(149,'2022_10_08_132354_create_google_wallet_event_classes_table',3);
INSERT INTO migrations VALUES(150,'2022_10_08_132408_create_google_wallet_event_objects_table',3);
INSERT INTO migrations VALUES(151,'2022_10_08_224937_create_activity_enrollments_table',3);
INSERT INTO migrations VALUES(152,'2022_10_08_224949_copy_enrollments_to_activity_enrollments_table',3);
INSERT INTO migrations VALUES(153,'2022_10_08_225143_create_ticket_codes_on_enrollments',3);
INSERT INTO migrations VALUES(154,'2022_10_08_225157_re_encrypt_user_model',3);
INSERT INTO migrations VALUES(155,'2022_10_08_225203_re_encrypt_enrollment_model',3);
INSERT INTO migrations VALUES(156,'2022_10_08_225215_re_encrypt_join_submission_model',3);
INSERT INTO migrations VALUES(157,'2022_10_08_232153_update_ticket_code_on_activity_enrollments',3);
INSERT INTO migrations VALUES(158,'2022_10_08_232431_update_ticket_codes_on_all_enrollments',3);
INSERT INTO migrations VALUES(159,'2022_11_12_122759_change_redirect_instructions_to_lowercase',3);
INSERT INTO migrations VALUES(160,'2022_12_19_000000_create_field_attachments_table',3);
INSERT INTO migrations VALUES(161,'2022_12_23_160230_add_scheduled_at_to_activity_messages',3);
INSERT INTO migrations VALUES(162,'2022_12_23_160257_add_tickets_to_activity_messages',3);
INSERT INTO migrations VALUES(163,'2023_01_08_021623_change_activity_message_audience_to_boolean',3);
INSERT INTO migrations VALUES(164,'2023_01_08_023112_change_typo_recipients_in_activity_messages',3);
INSERT INTO migrations VALUES(165,'2023_01_08_044533_create_google_wallet_messages_table',3);
INSERT INTO migrations VALUES(166,'2023_01_08_044850_create_google_wallet_message_morphs_table',3);
INSERT INTO migrations VALUES(167,'2023_01_08_045630_add_soft_deletes_to_activity_messages',3);
INSERT INTO migrations VALUES(168,'2023_01_11_174203_add_barcode_data_to_enrollments',3);
INSERT INTO migrations VALUES(169,'2023_01_11_182234_add_barcode_type_to_google_wallet_event_objects',3);
INSERT INTO migrations VALUES(170,'2023_01_28_022429_add_locked_flag_to_users_table',3);
INSERT INTO migrations VALUES(171,'2023_02_06_023120_add_additional_metadata_to_gallery_photos',3);
INSERT INTO migrations VALUES(172,'2023_02_06_165846_add_exif_data_to_gallery_photos',3);
INSERT INTO migrations VALUES(173,'2023_09_03_190145_add_message_id_to_bot_quotes',3);
INSERT INTO migrations VALUES(174,'2023_11_07_132759_add_responsible_users_to_activities',3);
INSERT INTO migrations VALUES(175,'2023_11_09_122947_create_job_batches_table',3);
INSERT INTO migrations VALUES(176,'2023_11_10_125533_delete_payment_settlement_subject',4);
INSERT INTO migrations VALUES(177,'2023_11_10_125538_create_payment_settlement_payments',4);
INSERT INTO migrations VALUES(178,'2023_11_10_145823_add_additional_data_to_payment_settlements',4);
INSERT INTO migrations VALUES(179,'2023_11_15_175146_create_payment_settlement_refunded_payment',4);
